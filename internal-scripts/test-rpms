#!/bin/bash
set -e

SELFDIR=$(dirname "$0")
SELFDIR=$(cd "$SELFDIR" && pwd)
# shellcheck source=lib/library.sh
source "$SELFDIR/../lib/library.sh"


header "Installing packages"
run yum install -y perl sudo binutils which

if ls /input/repo/*jemalloc* 2>/dev/null; then
    VARIANT=jemalloc
elif ls /input/repo/*malloctrim* 2>/dev/null; then
    VARIANT=malloctrim
else
    VARIANT=normal
fi
RUBY_PACKAGE_VERSION=$(perl -pe 's/.+?-([0-9].+?)-rev.+/\1/' <<<"$RUBY_PACKAGE_NAME")
RUBY_PACKAGE_VERSION_WITHOUT_VARIANT_SUFFIX=$(sed 's/-.*//' <<<"$RUBY_PACKAGE_VERSION")
echo "+ Detected variant: $VARIANT"

echo "+ Create /etc/yum.repos.d/local.repo"
cat <<EOF > /etc/yum.repos.d/local.repo
[local]
name=local
baseurl=file:///input/repo
gpgcheck=0
EOF
run yum install -y "fullstaq-ruby-$RUBY_PACKAGE_VERSION" fullstaq-rbenv

echo


header "Setting up"
groupadd --gid 9999 utility
adduser --uid 9999 --gid 9999 --password '#' utility
echo "+ Loading Rbenv environment"
eval "$(rbenv init -)"
run rbenv global "$RUBY_PACKAGE_VERSION"
run sudo -u utility -H rbenv global "$RUBY_PACKAGE_VERSION"
echo


header "Basic checks"

function assert_equals()
{
    local real="$1"
    local expected="$2"
    if [[ "$real" == "$expected" ]]; then
        echo yes
    else
        echo no
        echo "  Expected: $expected"
        echo "  Actual  : $real"
        return 1
    fi
}

echo -n "Checking whether variant is $EXPECTED_VARIANT... "
assert_equals "$VARIANT" "$EXPECTED_VARIANT"

echo -n "Checking whether Rbenv is in /usr/bin/rbenv... "
output=$(which rbenv)
assert_equals "$output" /usr/bin/rbenv

echo -n "Checking whether Fullstaq Ruby $RUBY_PACKAGE_VERSION is in /usr/lib/fullstaq-ruby/versions/$RUBY_PACKAGE_VERSION... "
if [[ -e "/usr/lib/fullstaq-ruby/versions/$RUBY_PACKAGE_VERSION/bin/ruby" ]]; then
    echo yes
else
    echo no
    exit 1
fi

echo -n "Checking whether active Ruby for root is /usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/bin/ruby... "
output=$(rbenv which ruby)
assert_equals "$output" "/usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/bin/ruby"

echo -n "Checking whether the package version contains the proper variant suffix... "
if [[ "$VARIANT" = normal ]]; then
    if [[ ! "$RUBY_PACKAGE_VERSION" =~ - ]]; then
        echo yes
    else
        echo no
        echo "  '$RUBY_PACKAGE_VERSION' contains a dash, so it is presumed to contain a variant suffix."
        exit 1
    fi
elif [[ "$VARIANT" = jemalloc ]]; then
    if [[ "$RUBY_PACKAGE_VERSION" =~ -jemalloc$ ]]; then
        echo yes
    else
        echo no
        echo "  Expected '$RUBY_PACKAGE_VERSION' to end with '-jemalloc'."
        exit 1
    fi
elif [[ "$VARIANT" = malloctrim ]]; then
    if [[ "$RUBY_PACKAGE_VERSION" =~ -malloctrim$ ]]; then
        echo yes
    else
        echo no
        echo "  Expected '$RUBY_PACKAGE_VERSION' to end with '-malloctrim'."
        exit 1
    fi
else
    echo "BUG: unsupported variant $VARIANT" >&2
    exit 1
fi

echo -n "Checking whether active Ruby for utility is /usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/bin/ruby... "
output=$(sudo -u utility -H sh -c 'eval "$(rbenv init -)" && rbenv which ruby')
assert_equals "$output" "/usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/bin/ruby"

echo -n "Checking whether Ruby works... "
output=$(ruby -e 'puts "hello world"')
assert_equals "$output" "hello world"

echo -n "Checking whether Ruby native libraries work... "
output=$(ruby -rbigdecimal -e "puts BigDecimal.new(0)")
assert_equals "$output" "0.0"

echo -n "Checking whether irb works... "
output=$(irb <<<'puts "hello world"')
if [[ "$output" =~ "hello world" ]]; then
    echo yes
else
    echo no
    exit 1
fi

echo -n "Checking whether gem works... "
output=$(gem env)
if grep -Fq "RUBY VERSION: $RUBY_PACKAGE_VERSION_WITHOUT_VARIANT_SUFFIX" <<<"$output"; then
    echo yes
else
    echo no
    echo "  Expected 'gem env' output to contain 'RUBY VERSION: $RUBY_PACKAGE_VERSION_WITHOUT_VARIANT_SUFFIX'"
    exit 1
fi

if [[ "$VARIANT" = jemalloc ]]; then
    echo -n "Checking whether Jemalloc library exists... "
    if [[ -e "/usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/lib/libjemalloc.so" ]]; then
        echo yes
    else
        echo no
        exit 1
    fi

    echo -n "Checking whether Ruby is linked to Jemalloc... "
    output=$(objdump -p "/usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/lib/libruby.so")
    if grep NEEDED <<<"$output" | grep -q libjemalloc.so; then
        echo yes
    else
        echo no
        exit 1
    fi

    echo -n "Checking whether 'ruby -v' mentions Jemalloc... "
    output=$(ruby -v)
    if grep -qF '+jemalloc' <<<"$output"; then
        echo yes
    else
        echo no
        exit 1
    fi
else
    echo -n "Checking whether Jemalloc library does not exist... "
    if [[ ! -e "/usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/lib/libjemalloc.so" ]]; then
        echo yes
    else
        echo no
        exit 1
    fi

    echo -n "Checking whether Ruby is not linked to Jemalloc... "
    output=$(objdump -p "/usr/lib/rbenv/versions/$RUBY_PACKAGE_VERSION/lib/libruby.so")
    if ! grep NEEDED <<<"$output" | grep -q libjemalloc.so; then
        echo yes
    else
        echo no
        exit 1
    fi

    if [[ "$VARIANT" = malloctrim ]]; then
        echo -n "Checking whether 'ruby -v' mentions malloctrim... "
        output=$(ruby -v)
        if grep -qF '+malloctrim' <<<"$output"; then
            echo yes
        else
            echo no
            exit 1
        fi
    fi
fi

echo


header "Test installing gems"
run yum install -y gcc gcc-c++ make
run gem install bundler -v 1.17.3 --no-document
run sudo -u utility -H cp /system/resources/test-env/Gemfile* ~utility/
run sudo -u utility -H env BUNDLE_GEMFILE=/home/utility/Gemfile \
    rbenv exec bundle install --path=/home/utility/bundle -j 4
run sudo -u utility -H env BUNDLE_GEMFILE=/home/utility/Gemfile \
    rbenv exec bundle exec rspec --version

echo
echo "All tests pass."
